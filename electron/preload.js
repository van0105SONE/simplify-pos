const { contextBridge, ipcRenderer } = require('electron');

contextBridge.exposeInMainWorld('electronAPI', {
  printToBill: (html) => ipcRenderer.invoke('print-receipt', html),
  printToPDF: (html) => ipcRenderer.invoke('print-to-pdf', html),
  logIn: (body) => ipcRenderer.invoke('log-in', body),
  getUser: () => ipcRenderer.invoke('getUser'),
  logout: () => ipcRenderer.invoke('logout'),
  createUser: (body) => ipcRenderer.invoke('create-user', body),
  getAllUsers: () => ipcRenderer.invoke('get-all-users'),
  getProducts: () => ipcRenderer.invoke('get-products'),
  getProductByid: (id) => ipcRenderer.invoke('get-product-by-id', id),
  createProduct: (body) => ipcRenderer.invoke('create-product', body),
  editProduct: (body) => ipcRenderer.invoke('edit-product', body),
  deleteProduct: (id) => ipcRenderer.invoke('delete-product', id),
  createTable: (body) => ipcRenderer.invoke('create-table', body),
  editTable: (body) => ipcRenderer.invoke('edit-table', body),
  deleteTable: (id) => ipcRenderer.invoke('delete-table', id),
  getTableById: (id) => ipcRenderer.invoke('get-table-by-id', id),
  getTables: () => ipcRenderer.invoke('get-tables'),
  createSupply: (body) => ipcRenderer.invoke('create-supply', body),
  editSupply: (body) => ipcRenderer.invoke('edit-supply', body),
  deleteSupply: (id) => ipcRenderer.invoke('delete-supply', id),
  getSupplyById: (id) => ipcRenderer.invoke('get-supply-by-id', id),
  getSupplys: () => ipcRenderer.invoke('get-supplys'),
  createUnitType: (body) => ipcRenderer.invoke('create-unitType', body),
  deleteUnitType: (id) => ipcRenderer.invoke('delete-unitType', id),
  getUnitTypes: () => ipcRenderer.invoke('get-unitTypes'),
  createCategory: (body) => ipcRenderer.invoke('create-category', body),
  deleteCategory: (id) => ipcRenderer.invoke('delete-category', id),
  getCategories: () => ipcRenderer.invoke('get-categories'),
  createCurrency: (body) => ipcRenderer.invoke('create-currency', body),
  getAllCurrency: () => ipcRenderer.invoke('get-all-currency'),
  getDefaultCurrency: () => ipcRenderer.invoke('get-default-currency'),
  getBillByTable: (id) => ipcRenderer.invoke('get-bill-by-table', id),
  createSetting: (body) => ipcRenderer.invoke('create-setting', body),
  editSetting: (body) => ipcRenderer.invoke('edit-setting', body),
  getSetting: () => ipcRenderer.invoke('get-setting'),
  checkout: (body) => ipcRenderer.invoke('checkout', body),
  getOrderTransaction: (params) => ipcRenderer.invoke('get-sell-transactions', params),
  getSaleReport: () => ipcRenderer.invoke('get-saleReport')
});